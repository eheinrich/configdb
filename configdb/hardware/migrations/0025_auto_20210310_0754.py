# Generated by Django 3.0.6 on 2021-03-10 07:54

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('hardware', '0024_instrumenttype_validation_schema'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConfigurationType',
            fields=[
                ('modified', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('force_acquisition_off', models.BooleanField(default=False, help_text='If True, this configuration type will force the acquisition mode to be OFF. Certain configuration types will not need acquisition, such as Biases, Darks, and potentially Lamp Flats and Arcs')),
                ('requires_optical_elements', models.BooleanField(default=True, help_text='Whether this configuration type requires optical path elements to be set. Some types like Biases and Darks typically do not need these set, so this value should be false for those types.')),
                ('schedulable', models.BooleanField(default=True, help_text='Whether this configuration type should be usable by scheduled observations, or only via direct submission.')),
                ('config_change_overhead', models.FloatField(default=0, help_text='Time necessary for switching to this configuration type from a different configuration type during an observation, like going between a Spectrum and a Lamp Flat for example. This could account for starting up a lamp.')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InstrumentCategory',
            fields=[
                ('modified', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=64, primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='instrumenttype',
            name='config_change_time',
        ),
        migrations.RenameField(
            model_name='instrumenttype',
            old_name='front_padding',
            new_name='observation_front_padding'
        ),
        migrations.AddField(
            model_name='genericmode',
            name='schedulable',
            field=models.BooleanField(default=True, help_text='Whether this mode should be usable by scheduled observations, or only via direct submission.'),
        ),
        migrations.AddField(
            model_name='instrumenttype',
            name='config_front_padding',
            field=models.FloatField(default=0, help_text='Setup time for each configuration of an observation on this instrument. This is for things like configuration specific setup time.'),
        ),
        migrations.AlterField(
            model_name='instrumenttype',
            name='observation_front_padding',
            field=models.FloatField(default=90, help_text='Setup time for taking on observation on this instrument, applied once per observation. This is for tasks like slewing and instrument configuration.'),
        ),
        migrations.AlterField(
            model_name='genericmode',
            name='overhead',
            field=models.FloatField(help_text='Overhead associated with the generic mode. Where this overhead is applied depends on what type of generic mode this is for. For example, a readout mode is applied per exposure, while an acquisition overhead is applied for the acquisition step at the beginning of an observation.'),
        ),
        migrations.AlterField(
            model_name='instrumenttype',
            name='acquire_exposure_time',
            field=models.FloatField(default=0, help_text='The default exposure time to use for acquisition exposures with this instrument type.'),
        ),
        migrations.AlterField(
            model_name='instrumenttype',
            name='default_acceptability_threshold',
            field=models.FloatField(default=90.0, help_text='The default acceptability threshold to use for Requests submitted on this instrument type. Acceptability threshold is the minimum percentage of data an Observation must take before causing its Request to be counted as complete.'),
        ),
        migrations.AlterField(
            model_name='instrumenttype',
            name='fixed_overhead_per_exposure',
            field=models.FloatField(default=1, help_text='A per exposure overhead to be applied. This accounts for any per exposure setup or delays found in the camera or instrument control software.'),
        ),
        migrations.AlterField(
            model_name='opticalelement',
            name='schedulable',
            field=models.BooleanField(default=True, help_text='Whether this optical element should be usable by scheduled observations, or only via direct submission.'),
        ),
        migrations.AddField(
            model_name='instrumenttype',
            name='configuration_types_links',
            field=models.ManyToManyField(help_text='The set of configuration types available for use with this instrument type.', related_name='instrument_types', to='hardware.ConfigurationType'),
        ),
        migrations.AddField(
            model_name='instrumenttype',
            name='instrument_category',
            field=models.ForeignKey(help_text='The category of this instrument type, like IMAGE or SPECTRO. ', null=True, on_delete=django.db.models.deletion.PROTECT, to='hardware.InstrumentCategory'),
        ),
    ]
